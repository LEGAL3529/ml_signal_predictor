
import pandas as pd
import matplotlib.pyplot as plt
import joblib
from sklearn.linear_model import LogisticRegression

def predict_and_plot():
    try:
        print("üöÄ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ...")
        df = pd.read_csv("data/sample_data_with_signals.csv")
        print("‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö:", e)
        return

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–∏–≥–Ω–∞–ª—ã –≤ —á–∏—Å–ª–æ–≤–æ–π —Ñ–æ—Ä–º–∞—Ç
    df['signal'] = df['signal'].map({'BUY': 1, 'SELL': -1, 'HOLD': 0})

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º close –∏ volume –∫–∞–∫ —Ñ–∏—á–∏
    X = df[['close', 'volume']]
    y = df['signal']

    print("üß† –û–±—É—á–∞–µ–º –º–æ–¥–µ–ª—å...")
    model = LogisticRegression()
    model.fit(X, y)
    print(f"üéØ –¢–æ—á–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–∏: {round(model.score(X, y)*100, 2)}%")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–æ–¥–µ–ª—å
    joblib.dump(model, "model.pkl")
    print("‚úÖ –ú–æ–¥–µ–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –∫–∞–∫ model.pkl")

    # –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
    y_pred = model.predict(X)

    # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
    plt.figure(figsize=(14, 6))
    plt.plot(df['timestamp'], df['close'], label='–¶–µ–Ω–∞', alpha=0.5)
    plt.scatter(df['timestamp'], df['close'], c=y_pred, cmap='coolwarm', label='–°–∏–≥–Ω–∞–ª—ã')
    plt.title("–ü—Ä–æ–≥–Ω–æ–∑ —Å–∏–≥–Ω–∞–ª–æ–≤ (BUY=1, SELL=-1, HOLD=0)")
    plt.xlabel("–í—Ä–µ–º—è")
    plt.ylabel("–¶–µ–Ω–∞")
    plt.legend()
    plt.grid(True)
    plt.tight_layout()
    plt.savefig("preview.png")
    print("üìä –ì—Ä–∞—Ñ–∏–∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –∫–∞–∫ preview.png")

if __name__ == "__main__":
    predict_and_plot()
